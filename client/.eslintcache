[{"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\index.js":"1","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\reportWebVitals.js":"2","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\App.js":"3","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\pages\\SingleThought.js":"4","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\pages\\Home.js":"5","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\pages\\Landing.js":"6","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\pages\\Profile.js":"7","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\pages\\Signup.js":"8","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\pages\\ZodiacInfo.js":"9","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\pages\\Login.js":"10","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\components\\Header\\index.js":"11","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\components\\Footer\\index.js":"12","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\utils\\auth.js":"13","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\utils\\queries.js":"14","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\utils\\mutations.js":"15","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\components\\CommentList\\index.js":"16","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\components\\CommentForm\\index.js":"17","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\components\\Quote\\index.js":"18","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\components\\ThoughtForm\\index.js":"19","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\components\\ThoughtList\\index.js":"20"},{"size":548,"mtime":1668444553000,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1667783586655,"results":"23","hashOfConfig":"22"},{"size":2669,"mtime":1668444552996,"results":"24","hashOfConfig":"22"},{"size":1581,"mtime":1668183627055,"results":"25","hashOfConfig":"22"},{"size":910,"mtime":1668444553044,"results":"26","hashOfConfig":"22"},{"size":2279,"mtime":1668444553045,"results":"27","hashOfConfig":"22"},{"size":3241,"mtime":1668444553046,"results":"28","hashOfConfig":"22"},{"size":14635,"mtime":1668444553046,"results":"29","hashOfConfig":"22"},{"size":9818,"mtime":1668444553047,"results":"30","hashOfConfig":"22"},{"size":2768,"mtime":1668444553045,"results":"31","hashOfConfig":"22"},{"size":1793,"mtime":1668448076746,"results":"32","hashOfConfig":"22"},{"size":745,"mtime":1668444552998,"results":"33","hashOfConfig":"22"},{"size":1050,"mtime":1668442658887,"results":"34","hashOfConfig":"22"},{"size":935,"mtime":1668448373669,"results":"35","hashOfConfig":"22"},{"size":1120,"mtime":1668026936628,"results":"36","hashOfConfig":"22"},{"size":953,"mtime":1667783586649,"results":"37","hashOfConfig":"22"},{"size":2416,"mtime":1668444552997,"results":"38","hashOfConfig":"22"},{"size":732,"mtime":1668199386170,"results":"39","hashOfConfig":"22"},{"size":3138,"mtime":1668444552999,"results":"40","hashOfConfig":"22"},{"size":1545,"mtime":1668444552999,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1r0wqp7",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\index.js",[],["86","87"],"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\reportWebVitals.js",[],"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\App.js",[],"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\pages\\SingleThought.js",[],"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\pages\\Home.js",[],"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\pages\\Landing.js",[],"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\pages\\Profile.js",[],"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\pages\\Signup.js",[],"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\pages\\ZodiacInfo.js",[],"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\pages\\Login.js",["88"],"import React, { useState } from 'react';//wrote useEffect\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\nimport Quote from '../components/Quote'\n\nimport Auth from '../utils/auth';\nimport { Card } from 'react-bootstrap';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10 \">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/home\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <>\n\n                <form onSubmit={handleFormSubmit}>\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Your email\"\n                    name=\"email\"\n                    type=\"email\"\n                    value={formState.email}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"******\"\n                    name=\"password\"\n                    type=\"password\"\n                    value={formState.password}\n                    onChange={handleChange}\n                  />\n                  <button\n                    className=\"btn btn-block btn-primary\"\n                    style={{ cursor: 'pointer' }}\n                    type=\"submit\"\n                  >\n                    Submit\n                  </button>\n                </form>\n\n              </>\n\n\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"typewriter\"> \n      <h4> <Quote/> </h4>\n      </div>\n\n    </main>\n  );\n};\n\nexport default Login;\n","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\utils\\auth.js",[],"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\utils\\queries.js",[],"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\utils\\mutations.js",[],"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\components\\CommentForm\\index.js",["89"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>Add your cosmic thoughts here ✨ </h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"cosmically thinking ✨✨\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your cosmic thoughts ✨.{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\components\\Quote\\index.js",[],"C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\components\\ThoughtForm\\index.js",["90"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Share your ✨ cosmic ✨ thoughts:</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"thoughts about your stars and what is on your mind ✨\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add a cosmic thought ✨\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share cosmic thoughts. ✨✨✨{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","C:\\Users\\maria\\OneDrive\\Desktop\\bootcamp-challenges\\CosmicInfinities\\client\\src\\components\\ThoughtList\\index.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":8,"column":10,"nodeType":"97","messageId":"98","endLine":8,"endColumn":14},{"ruleId":"95","severity":1,"message":"99","line":19,"column":15,"nodeType":"97","messageId":"98","endLine":19,"endColumn":19},{"ruleId":"95","severity":1,"message":"99","line":41,"column":15,"nodeType":"97","messageId":"98","endLine":41,"endColumn":19},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]